/**
 * Adyen Checkout APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, object, optional, Schema, string } from '../schema';

export interface StoredPaymentMethod2 {
  /** The brand of the card. */
  brand?: string;
  /** The month the card expires. */
  expiryMonth?: string;
  /** The last two digits of the year the card expires. For example, **22** for the year 2022. */
  expiryYear?: string;
  /** The unique payment method code. */
  holderName?: string;
  /** The IBAN of the bank account. */
  iban?: string;
  /** A unique identifier of this stored payment method. */
  id?: string;
  /** The last four digits of the PAN. */
  lastFour?: string;
  /** The display name of the stored payment method. */
  name?: string;
  /**
   * Returned in the response if you are not tokenizing with Adyen and are using the Merchant-initiated transactions (MIT) framework from Mastercard or Visa.
   * This contains either the Mastercard Trace ID or the Visa Transaction ID.
   */
  networkTxReference?: string;
  /** The name of the bank account holder. */
  ownerName?: string;
  /** The shopperâ€™s email address. */
  shopperEmail?: string;
  /** The supported recurring processing models for this stored payment method. */
  supportedRecurringProcessingModels?: string[];
  /** The supported shopper interactions for this stored payment method. */
  supportedShopperInteractions?: string[];
  /** The type of payment method. */
  type?: string;
}

export const storedPaymentMethod2Schema: Schema<StoredPaymentMethod2> = object({
  brand: ['brand', optional(string())],
  expiryMonth: ['expiryMonth', optional(string())],
  expiryYear: ['expiryYear', optional(string())],
  holderName: ['holderName', optional(string())],
  iban: ['iban', optional(string())],
  id: ['id', optional(string())],
  lastFour: ['lastFour', optional(string())],
  name: ['name', optional(string())],
  networkTxReference: ['networkTxReference', optional(string())],
  ownerName: ['ownerName', optional(string())],
  shopperEmail: ['shopperEmail', optional(string())],
  supportedRecurringProcessingModels: [
    'supportedRecurringProcessingModels',
    optional(array(string())),
  ],
  supportedShopperInteractions: [
    'supportedShopperInteractions',
    optional(array(string())),
  ],
  type: ['type', optional(string())],
});
