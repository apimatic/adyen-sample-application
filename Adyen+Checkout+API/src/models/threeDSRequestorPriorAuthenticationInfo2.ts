/**
 * Adyen Checkout APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { object, optional, Schema, string } from '../schema';
import {
  ThreeDSReqPriorAuthMethodEnum,
  threeDSReqPriorAuthMethodEnumSchema,
} from './threeDSReqPriorAuthMethodEnum';

/** Information about how the 3DS Requestor authenticated the cardholder as part of a previous 3DS transaction. */
export interface ThreeDSRequestorPriorAuthenticationInfo2 {
  /** Data that documents and supports a specific authentication process. Maximum length: 2048 bytes. */
  threeDSReqPriorAuthData?: string;
  /**
   * Mechanism used by the Cardholder to previously authenticate to the 3DS Requestor. Allowed values:
   * * **01** — Frictionless authentication occurred by ACS.
   * * **02** — Cardholder challenge occurred by ACS.
   * * **03** — AVS verified.
   * * **04** — Other issuer methods.
   */
  threeDSReqPriorAuthMethod?: ThreeDSReqPriorAuthMethodEnum;
  /** Date and time in UTC of the prior cardholder authentication. Format: YYYYMMDDHHMM */
  threeDSReqPriorAuthTimestamp?: string;
  /** This data element provides additional information to the ACS to determine the best approach for handing a request. This data element contains an ACS Transaction ID for a prior authenticated transaction. For example, the first recurring transaction that was authenticated with the cardholder. Length: 30 characters. */
  threeDSReqPriorRef?: string;
}

export const threeDSRequestorPriorAuthenticationInfo2Schema: Schema<ThreeDSRequestorPriorAuthenticationInfo2> = object(
  {
    threeDSReqPriorAuthData: ['threeDSReqPriorAuthData', optional(string())],
    threeDSReqPriorAuthMethod: [
      'threeDSReqPriorAuthMethod',
      optional(threeDSReqPriorAuthMethodEnumSchema),
    ],
    threeDSReqPriorAuthTimestamp: [
      'threeDSReqPriorAuthTimestamp',
      optional(string()),
    ],
    threeDSReqPriorRef: ['threeDSReqPriorRef', optional(string())],
  }
);
