/**
 * Adyen Checkout APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import { Amount23, amount23Schema } from './amount23';
import { LineItem, lineItemSchema } from './lineItem';
import { Split, splitSchema } from './split';

export interface CreatePaymentCaptureRequest {
  /** The amount that you want to capture. The `currency` must match the currency used in authorisation, the `value` must be smaller than or equal to the authorised amount. */
  amount: Amount23;
  /**
   * Price and product information of the captured items, required for [partial captures](https://docs.adyen.com/online-payments/capture#partial-capture).
   * > This field is required for partial captures with 3x 4x Oney, Affirm, Afterpay, Clearpay, Klarna, Ratepay, Zip and Atome.
   */
  lineItems?: LineItem[];
  /** The merchant account that is used to process the payment. */
  merchantAccount: string;
  /** Your reference for the capture request. Maximum length: 80 characters. */
  reference?: string;
  /** An array of objects specifying how the amount should be split between accounts when using Adyen for Platforms. For details, refer to [Providing split information](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information). */
  splits?: Split[];
}

export const createPaymentCaptureRequestSchema: Schema<CreatePaymentCaptureRequest> = object(
  {
    amount: ['amount', lazy(() => amount23Schema)],
    lineItems: ['lineItems', optional(array(lazy(() => lineItemSchema)))],
    merchantAccount: ['merchantAccount', string()],
    reference: ['reference', optional(string())],
    splits: ['splits', optional(array(lazy(() => splitSchema)))],
  }
);
