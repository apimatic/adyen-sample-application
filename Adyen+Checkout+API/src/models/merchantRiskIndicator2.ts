/**
 * Adyen Checkout APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  boolean,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { Amount7, amount7Schema } from './amount7';
import {
  DeliveryAddressIndicatorEnum,
  deliveryAddressIndicatorEnumSchema,
} from './deliveryAddressIndicatorEnum';
import {
  DeliveryTimeframeEnum,
  deliveryTimeframeEnumSchema,
} from './deliveryTimeframeEnum';

/**
 * Additional risk fields for 3D Secure 2.
 * > For 3D Secure 2 transactions, we recommend that you include this object to increase the chances of achieving a frictionless flow.
 */
export interface MerchantRiskIndicator2 {
  /** Whether the chosen delivery address is identical to the billing address. */
  addressMatch?: boolean;
  /**
   * Indicator regarding the delivery address.
   * Allowed values:
   * * `shipToBillingAddress`
   * * `shipToVerifiedAddress`
   * * `shipToNewAddress`
   * * `shipToStore`
   * * `digitalGoods`
   * * `goodsNotShipped`
   * * `other`
   */
  deliveryAddressIndicator?: DeliveryAddressIndicatorEnum;
  /** The delivery email address (for digital goods). */
  deliveryEmail?: string;
  /** For Electronic delivery, the email address to which the merchandise was delivered. Maximum length: 254 characters. */
  deliveryEmailAddress?: string;
  /**
   * The estimated delivery time for the shopper to receive the goods.
   * Allowed values:
   * * `electronicDelivery`
   * * `sameDayShipping`
   * * `overnightShipping`
   * * `twoOrMoreDaysShipping`
   */
  deliveryTimeframe?: DeliveryTimeframeEnum;
  /** For prepaid or gift card purchase, the purchase amount total of prepaid or gift card(s). */
  giftCardAmount?: Amount7;
  /** For prepaid or gift card purchase, total count of individual prepaid or gift cards/codes purchased. */
  giftCardCount?: number;
  /** For prepaid or gift card purchase, [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) three-digit currency code of the gift card, other than those listed in Table A.5 of the EMVCo 3D Secure Protocol and Core Functions Specification. */
  giftCardCurr?: string;
  /** For pre-order purchases, the expected date this product will be available to the shopper. */
  preOrderDate?: string;
  /** Indicator for whether this transaction is for pre-ordering a product. */
  preOrderPurchase?: boolean;
  /** Indicates whether Cardholder is placing an order for merchandise with a future availability or release date. */
  preOrderPurchaseInd?: string;
  /** Indicator for whether the shopper has already purchased the same items in the past. */
  reorderItems?: boolean;
  /** Indicates whether the cardholder is reordering previously purchased merchandise. */
  reorderItemsInd?: string;
  /** Indicates shipping method chosen for the transaction. */
  shipIndicator?: string;
}

export const merchantRiskIndicator2Schema: Schema<MerchantRiskIndicator2> = object(
  {
    addressMatch: ['addressMatch', optional(boolean())],
    deliveryAddressIndicator: [
      'deliveryAddressIndicator',
      optional(deliveryAddressIndicatorEnumSchema),
    ],
    deliveryEmail: ['deliveryEmail', optional(string())],
    deliveryEmailAddress: ['deliveryEmailAddress', optional(string())],
    deliveryTimeframe: [
      'deliveryTimeframe',
      optional(deliveryTimeframeEnumSchema),
    ],
    giftCardAmount: ['giftCardAmount', optional(lazy(() => amount7Schema))],
    giftCardCount: ['giftCardCount', optional(number())],
    giftCardCurr: ['giftCardCurr', optional(string())],
    preOrderDate: ['preOrderDate', optional(string())],
    preOrderPurchase: ['preOrderPurchase', optional(boolean())],
    preOrderPurchaseInd: ['preOrderPurchaseInd', optional(string())],
    reorderItems: ['reorderItems', optional(boolean())],
    reorderItemsInd: ['reorderItemsInd', optional(string())],
    shipIndicator: ['shipIndicator', optional(string())],
  }
);
