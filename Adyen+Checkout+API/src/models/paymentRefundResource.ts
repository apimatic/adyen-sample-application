/**
 * Adyen Checkout APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import { Amount34, amount34Schema } from './amount34';
import { LineItem, lineItemSchema } from './lineItem';
import {
  MerchantRefundReason1Enum,
  merchantRefundReason1EnumSchema,
} from './merchantRefundReason1Enum';
import { Split, splitSchema } from './split';

export interface PaymentRefundResource {
  /** The refund amount. */
  amount: Amount34;
  /**
   * Price and product information of the refunded items, required for [partial refunds](https://docs.adyen.com/online-payments/refund#refund-a-payment).
   * > This field is required for partial refunds with 3x 4x Oney, Affirm, Afterpay, Clearpay, Klarna, Ratepay, Zip and Atome.
   */
  lineItems?: LineItem[];
  /** The merchant account that is used to process the payment. */
  merchantAccount: string;
  /** Your reason for the refund request. */
  merchantRefundReason?: MerchantRefundReason1Enum;
  /** The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment to refund. */
  paymentPspReference: string;
  /** Adyen's 16-character reference associated with the refund request. */
  pspReference: string;
  /** Your reference for the refund request. */
  reference?: string;
  /** An array of objects specifying how the amount should be split between accounts when using Adyen for Platforms. For details, refer to [Providing split information](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information). */
  splits?: Split[];
  /** The status of your request. This will always have the value **received**. */
  status: string;
}

export const paymentRefundResourceSchema: Schema<PaymentRefundResource> = object(
  {
    amount: ['amount', lazy(() => amount34Schema)],
    lineItems: ['lineItems', optional(array(lazy(() => lineItemSchema)))],
    merchantAccount: ['merchantAccount', string()],
    merchantRefundReason: [
      'merchantRefundReason',
      optional(merchantRefundReason1EnumSchema),
    ],
    paymentPspReference: ['paymentPspReference', string()],
    pspReference: ['pspReference', string()],
    reference: ['reference', optional(string())],
    splits: ['splits', optional(array(lazy(() => splitSchema)))],
    status: ['status', string()],
  }
);
