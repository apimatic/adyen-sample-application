/**
 * Adyen Checkout APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  dict,
  lazy,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { Amount2, amount2Schema } from './amount2';
import { Channel3Enum, channel3EnumSchema } from './channel3Enum';
import { CheckoutOrder2, checkoutOrder2Schema } from './checkoutOrder2';

export interface PaymentMethodsRequest {
  /**
   * This field contains additional data, which may be required for a particular payment request.
   * The `additionalData` object consists of entries, each of which includes the key and value.
   */
  additionalData?: Record<string, string>;
  /**
   * List of payment methods to be presented to the shopper. To refer to payment methods, use their `paymentMethod.type` from [Payment methods overview](https://docs.adyen.com/payment-methods).
   * Example: `"allowedPaymentMethods":["ideal","giropay"]`
   */
  allowedPaymentMethods?: string[];
  /** The amount information for the transaction (in [minor units](https://docs.adyen.com/development-resources/currency-codes)). For [BIN or card verification](https://docs.adyen.com/payment-methods/cards/bin-data-and-card-verification) requests, set amount to 0 (zero). */
  amount?: Amount2;
  /**
   * List of payment methods to be hidden from the shopper. To refer to payment methods, use their `paymentMethod.type` from [Payment methods overview](https://docs.adyen.com/payment-methods).
   * Example: `"blockedPaymentMethods":["ideal","giropay"]`
   */
  blockedPaymentMethods?: string[];
  /**
   * The platform where a payment transaction takes place. This field can be used for filtering out payment methods that are only available on specific platforms. Possible values:
   * * iOS
   * * Android
   * * Web
   */
  channel?: Channel3Enum;
  /** The shopper's country code. */
  countryCode?: string;
  /** The merchant account identifier, with which you want to process the transaction. */
  merchantAccount: string;
  /** The order information required for partial payments. */
  order?: CheckoutOrder2;
  /** The combination of a language code and a country code to specify the language to be used in the payment. */
  shopperLocale?: string;
  /**
   * Required for recurring payments.
   * Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.
   * > Your reference must not include personally identifiable information (PII), for example name or email address.
   */
  shopperReference?: string;
  /** Boolean value indicating whether the card payment method should be split into separate debit and credit options. */
  splitCardFundingSources?: boolean;
  /** The ecommerce or point-of-sale store that is processing the payment. Used in [partner model integrations](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners#route-payments) for Adyen for Platforms. */
  store?: string;
}

export const paymentMethodsRequestSchema: Schema<PaymentMethodsRequest> = object(
  {
    additionalData: ['additionalData', optional(dict(string()))],
    allowedPaymentMethods: ['allowedPaymentMethods', optional(array(string()))],
    amount: ['amount', optional(lazy(() => amount2Schema))],
    blockedPaymentMethods: ['blockedPaymentMethods', optional(array(string()))],
    channel: ['channel', optional(channel3EnumSchema)],
    countryCode: ['countryCode', optional(string())],
    merchantAccount: ['merchantAccount', string()],
    order: ['order', optional(lazy(() => checkoutOrder2Schema))],
    shopperLocale: ['shopperLocale', optional(string())],
    shopperReference: ['shopperReference', optional(string())],
    splitCardFundingSources: ['splitCardFundingSources', optional(boolean())],
    store: ['store', optional(string())],
  }
);
