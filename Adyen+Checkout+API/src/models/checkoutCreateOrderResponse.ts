/**
 * Adyen Checkout APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { dict, lazy, object, optional, Schema, string } from '../schema';
import { Amount11, amount11Schema } from './amount11';
import { Amount12, amount12Schema } from './amount12';
import { FraudResult1, fraudResult1Schema } from './fraudResult1';

export interface CheckoutCreateOrderResponse {
  /** Contains additional information about the payment. Some data fields are included only if you select them first: Go to **Customer Area** > **Developers** > **Additional data**. */
  additionalData?: Record<string, string>;
  /** The initial amount of the order. */
  amount: Amount11;
  /** The date that the order will expire. */
  expiresAt: string;
  /** The fraud result properties of the payment. */
  fraudResult?: FraudResult1;
  /** The encrypted data that will be used by merchant for adding payments to the order. */
  orderData: string;
  /** Adyen's 16-character reference associated with the transaction/request. This value is globally unique; quote it when communicating with us about this request. */
  pspReference?: string;
  /** The reference provided by merchant for creating the order. */
  reference?: string;
  /**
   * If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error. When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.
   * For more information, see [Refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).
   */
  refusalReason?: string;
  /** The remaining amount in the order. */
  remainingAmount: Amount12;
  /**
   * The result of the order creation request.
   *  The value is always **Success**.
   */
  resultCode: string;
}

export const checkoutCreateOrderResponseSchema: Schema<CheckoutCreateOrderResponse> = object(
  {
    additionalData: ['additionalData', optional(dict(string()))],
    amount: ['amount', lazy(() => amount11Schema)],
    expiresAt: ['expiresAt', string()],
    fraudResult: ['fraudResult', optional(lazy(() => fraudResult1Schema))],
    orderData: ['orderData', string()],
    pspReference: ['pspReference', optional(string())],
    reference: ['reference', optional(string())],
    refusalReason: ['refusalReason', optional(string())],
    remainingAmount: ['remainingAmount', lazy(() => amount12Schema)],
    resultCode: ['resultCode', string()],
  }
);
