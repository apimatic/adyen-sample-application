/**
 * Adyen Checkout APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, object, optional, Schema, string } from '../schema';
import { Amount26, amount26Schema } from './amount26';
import { PaymentResponse5, paymentResponse5Schema } from './paymentResponse5';
import { StatusEnum, statusEnumSchema } from './statusEnum';

export interface DonationResponse {
  /** Authorised amount in the transaction. */
  amount?: Amount26;
  /** The Adyen account name of your charity. We will provide you with this account name once your chosen charity has been [onboarded](https://docs.adyen.com/online-payments/donations#onboarding). */
  donationAccount?: string;
  /** Your unique resource identifier. */
  id?: string;
  /** The merchant account identifier, with which you want to process the transaction. */
  merchantAccount?: string;
  /** Action to be taken for completing the payment. */
  payment?: PaymentResponse5;
  /** The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement. If you need to provide multiple references for a transaction, separate them with hyphens ("-"). Maximum length: 80 characters. */
  reference?: string;
  /**
   * The status of the donation transaction.
   * Possible values:
   * * **completed**
   * * **pending**
   * * **refused**
   */
  status?: StatusEnum;
}

export const donationResponseSchema: Schema<DonationResponse> = object({
  amount: ['amount', optional(lazy(() => amount26Schema))],
  donationAccount: ['donationAccount', optional(string())],
  id: ['id', optional(string())],
  merchantAccount: ['merchantAccount', optional(string())],
  payment: ['payment', optional(lazy(() => paymentResponse5Schema))],
  reference: ['reference', optional(string())],
  status: ['status', optional(statusEnumSchema)],
});
