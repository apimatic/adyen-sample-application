/**
 * Adyen Checkout APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { object, optional, Schema, string } from '../schema';

export interface PaymentCompletionDetails {
  /** A payment session identifier returned by the card issuer. */
  mD?: string;
  /** (3D) Payment Authentication Request data for the card issuer. */
  paReq?: string;
  /** (3D) Payment Authentication Response data by the card issuer. */
  paRes?: string;
  /** PayPal-generated token for recurring payments. */
  billingToken?: string;
  /** The SMS verification code collected from the shopper. */
  cupsecureplusSmscode?: string;
  /** PayPal-generated third party access token. */
  facilitatorAccessToken?: string;
  /** A random number sent to the mobile phone number of the shopper to verify the payment. */
  oneTimePasscode?: string;
  /** PayPal-assigned ID for the order. */
  orderID?: string;
  /** PayPal-assigned ID for the payer (shopper). */
  payerID?: string;
  /** Payload appended to the `returnURL` as a result of the redirect. */
  payload?: string;
  /** PayPal-generated ID for the payment. */
  paymentID?: string;
  /** Value passed from the WeChat MiniProgram `wx.requestPayment` **complete** callback. Possible values: any value starting with `requestPayment:`. */
  paymentStatus?: string;
  /** The result of the redirect as appended to the `returnURL`. */
  redirectResult?: string;
  /** Value you received from the WeChat Pay SDK. */
  resultCode?: string;
  /** Base64-encoded string returned by the Component after the challenge flow. It contains the following parameters: `transStatus`, `authorisationToken`. */
  threeDSResult?: string;
  /** Base64-encoded string returned by the Component after the challenge flow. It contains the following parameter: `transStatus`. */
  threeds2ChallengeResult?: string;
  /** Base64-encoded string returned by the Component after the challenge flow. It contains the following parameter: `threeDSCompInd`. */
  threeds2Fingerprint?: string;
}

export const paymentCompletionDetailsSchema: Schema<PaymentCompletionDetails> = object(
  {
    mD: ['MD', optional(string())],
    paReq: ['PaReq', optional(string())],
    paRes: ['PaRes', optional(string())],
    billingToken: ['billingToken', optional(string())],
    cupsecureplusSmscode: ['cupsecureplus.smscode', optional(string())],
    facilitatorAccessToken: ['facilitatorAccessToken', optional(string())],
    oneTimePasscode: ['oneTimePasscode', optional(string())],
    orderID: ['orderID', optional(string())],
    payerID: ['payerID', optional(string())],
    payload: ['payload', optional(string())],
    paymentID: ['paymentID', optional(string())],
    paymentStatus: ['paymentStatus', optional(string())],
    redirectResult: ['redirectResult', optional(string())],
    resultCode: ['resultCode', optional(string())],
    threeDSResult: ['threeDSResult', optional(string())],
    threeds2ChallengeResult: ['threeds2.challengeResult', optional(string())],
    threeds2Fingerprint: ['threeds2.fingerprint', optional(string())],
  }
);
