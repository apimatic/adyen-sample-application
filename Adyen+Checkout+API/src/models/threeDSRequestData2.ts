/**
 * Adyen Checkout APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { object, optional, Schema } from '../schema';
import {
  ChallengeWindowSizeEnum,
  challengeWindowSizeEnumSchema,
} from './challengeWindowSizeEnum';
import { DataOnlyEnum, dataOnlyEnumSchema } from './dataOnlyEnum';
import {
  NativeThreeDSEnum,
  nativeThreeDSEnumSchema,
} from './nativeThreeDSEnum';
import {
  ThreeDSVersionEnum,
  threeDSVersionEnumSchema,
} from './threeDSVersionEnum';

/** Object with additional parameters for the 3D Secure authentication flow. */
export interface ThreeDSRequestData2 {
  /**
   * Dimensions of the 3DS2 challenge window to be displayed to the cardholder.
   * Possible values:
   * * **01** - size of 250x400
   * * **02** - size of 390x400
   * * **03** - size of 500x600
   * * **04** - size of 600x400
   * * **05** - Fullscreen
   */
  challengeWindowSize?: ChallengeWindowSizeEnum;
  /** Flag for data only flow. */
  dataOnly?: DataOnlyEnum;
  /**
   * Indicates if [native 3D Secure authentication](https://docs.adyen.com/online-payments/3d-secure/native-3ds2) should be used when available.
   * Possible values:
   * * **preferred**: Use native 3D Secure authentication when available.
   */
  nativeThreeDS?: NativeThreeDSEnum;
  /**
   * The version of 3D Secure to use.
   * Possible values:
   * * **2.1.0**
   * * **2.2.0**
   */
  threeDSVersion?: ThreeDSVersionEnum;
}

export const threeDSRequestData2Schema: Schema<ThreeDSRequestData2> = object({
  challengeWindowSize: [
    'challengeWindowSize',
    optional(challengeWindowSizeEnumSchema),
  ],
  dataOnly: ['dataOnly', optional(dataOnlyEnumSchema)],
  nativeThreeDS: ['nativeThreeDS', optional(nativeThreeDSEnumSchema)],
  threeDSVersion: ['threeDSVersion', optional(threeDSVersionEnumSchema)],
});
